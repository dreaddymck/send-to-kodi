#!/usr/bin/env bash
#

function dlrz_main() {

    # dlrz_check_url "$1"
    local url_pattern='(https?|ftp|file|rtsp)://[-[:alnum:]\+&@#/%?=~_|!:,.;]+'
    if [[ ! $1 =~ $url_pattern ]]; then
        echo "Unsupported[url/cmd]: $1"
        unset INPUT
        dlrz_read
    fi
    err=""
    res=""
    OPT_VCODEC="vcodec"
    if [[ -n $VCODEC ]]; then
        OPT_VCODEC="vcodec:$VCODEC"
    fi
    # if ! err=$(yt-dlp -f bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best --progress --user-agent "'$USER_AGENT'" "$1"); then
    # if ! err=$(yt-dlp -S res,ext:mp4:m4a --recode mp4 --limit-rate 500K --user-agent "'$USER_AGENT'" "$1"); then
    # if err="$($YTDLP -f "bestvideo[height<=$res][ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best" --limit-rate "$LIMIT_RATE" --quiet --progress --user-agent "'$USER_AGENT'" "$1" >&2)"; then
    function dlrz_dl_default(){
        echo "Downloading best available" >&2
        if ! $YTDLP -S "$OPT_VCODEC",res,ext:mp4:m4a --recode mp4 --limit-rate "$LIMIT_RATE" --quiet --progress --user-agent "'$USER_AGENT'" "$1" >&2; then
            echo "Search failed:"
            dlrz_read
        fi
    }
    if jq -e . >/dev/null 2>&1 <<<"$RESOLUTION_JSON"; then
        while read -r json_string; do
            clean_json_string=$(echo "$json_string" | jq -r '.') # Remove escape characters
            res=$(echo "$clean_json_string" | jq -r '.res')
            while read -r url_item; do

                if [[ "$INPUT" =~ $url_item ]]; then
                    echo "Downloading resolution $res or best available" >&2
                    if $YTDLP -S "$OPT_VCODEC",res:"$res",ext:mp4:m4a --recode mp4 --limit-rate "$LIMIT_RATE" --quiet --progress --user-agent "'$USER_AGENT'" "$1" >&2; then
                        err=1
                        break
                    fi
                fi

            done <<<"$(echo "$clean_json_string" | jq -r '.value[]')"

            if [[ -n $err ]]; then
                break
            fi

        done <<<"$(echo "$RESOLUTION_JSON" | jq -c '.[]')"

        if [[ -z $err ]]; then
            dlrz_dl_default "$@"
        fi
    else
        dlrz_dl_default "$@"
    fi

    for i in *.mp4; do
        if [[ -f "$i" ]]; then

            curr_res="$(ffprobe -v error -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 "$i")"
            mtitle="$i"
            if [[ -n $res ]]; then
                if [[ ! ${curr_res} =~ $res ]]; then
                    echo "Reszing $curr_res to $res"
                    ffmpeg -i "$i" -vf scale=-2:"$res" -preset ultrafast "${i%.*}.$res.mp4"
                    mtitle="${i%.*}.$res.mp4"
                    rm "$i"
                fi
            fi
            if [[ -n $REMOTE_SSH ]] && [[ -n $REMOTE_PATH ]]; then

                rsync -av --progress --inplace --no-group --no-perms --no-owner "$mtitle" "$REMOTE_SSH":"$REMOTE_PATH"
                rm "$mtitle"

            elif [[ ! $DOWNLOAD_DIR =~ ^($PWD)$ ]]; then

                rsync -av --progress --inplace --no-group --no-perms --no-owner "$mtitle" "$DOWNLOAD_DIR"
                rm "$mtitle"

            fi
        fi
    done
    dlrz_read
}
function dlrz_read() {

    read -r -e -d $'\n' -p '++DOWNLOAD/RESIZE++[url/cmd]: ' INPUT
    if [[ -z $INPUT ]]; then
        dlrz_read
    fi
    if [[ "$INPUT" =~ ^(exit|quit)$ ]]; then
        exit
    fi
    dlrz_cmd "$INPUT"
    dlrz_main "$INPUT"

}
function dlrz_cmd() {

    if [[ "$1" =~ ^(list)$ ]]; then
        unset INPUT
        list_files
        dlrz_read
    fi
    if [[ "$1" =~ ^(home|main)$ ]]; then
        unset INPUT
        send_to_kodi_banner
        kodi_main
    fi
    if [[ -f "$SEND_TO_KODI_DIR/lib/commands" ]]; then
        source "$SEND_TO_KODI_DIR/lib/commands"
    fi
    if [[ -z $INPUT ]]; then
        unset INPUT
        dlrz_read
    fi
}
function ytdl_dlrz() {

    if [ ! -d "$DOWNLOAD_DIR" ]; then
        echo "Invalid download directory, update DOWNLOAD_DIR in $SEND_TO_KODI_CONF."
        kodi_main
    fi

    dlrz_banner
    if [ $# -eq 0 ]; then
        dlrz_read
    fi
    dlrz_cmd "$@"
    dlrz_main "$@"

}
