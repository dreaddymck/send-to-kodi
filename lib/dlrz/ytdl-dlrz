#!/usr/bin/env bash
#

function dlrz_main() {

    # dlrz_check_url "$1"
    local url_pattern='(https?|ftp|file|rtsp)://[-[:alnum:]\+&@#/%?=~_|!:,.;]+'

    if [[ ! $1 =~ $url_pattern ]]; then
        echo "Unsupported[url/cmd]: $1"
        unset INPUT
        dlrz_help
        dlrz_read
    fi

    echo "Downloading"
    # if ! err=$(yt-dlp -f bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best --progress --user-agent "'$USER_AGENT'" "$1"); then
    # if ! err=$(yt-dlp -S res,ext:mp4:m4a --recode mp4 --trim-filenames 50 --user-agent "'$USER_AGENT'" "$1"); then
    # if ! err=$(yt-dlp -S res,ext:mp4:m4a --recode mp4 --limit-rate 500K --user-agent "'$USER_AGENT'" "$1"); then
    if ! err="$($YTDLP -f bestvideo[ext=mp4]+bestaudio[ext=m4a]/best[ext=mp4]/best --limit-rate "$LIMIT_RATE" --quiet --progress --user-agent "'$USER_AGENT'" "$1" >&2)"; then

        echo "Search failed: $err"
        dlrz_read
    fi
    for i in *.mp4; do
        if [[ -n $RHEIGHT ]]; then
            ffmpeg -i "$i" -vf scale=-2:"$RHEIGHT" -preset ultrafast "${i%.*}.$RHEIGHT.mp4"
            rm "$i"
        fi
        if [[ -n $REMOTE_SSH ]] && [[ -n $REMOTE_PATH ]]; then

            rsync -av --progress --inplace --no-group --no-perms --no-owner "${i%.*}.$RHEIGHT.mp4" "$REMOTE_SSH":"$REMOTE_PATH"
            rm "${i%.*}.$RHEIGHT.mp4"

        elif [[ ! $DOWNLOAD_DIR =~ ^($PWD)$ ]]; then

            rsync -av --progress --inplace --no-group --no-perms --no-owner "${i%.*}.$RHEIGHT.mp4" "$DOWNLOAD_DIR"
            rm "${i%.*}.$RHEIGHT.mp4"

        fi
    done
    list_files
    dlrz_read
}
function dlrz_read() {

    read -r -e -d $'\n' -p 'DOWNLOAD/RESIZE[url/cmd]: ' INPUT
    if [[ -z $INPUT ]]; then
        dlrz_read
    fi
    if [[ "$INPUT" =~ ^(exit|quit)$ ]]; then
        exit
    fi
    dlrz_cmd "$INPUT"
    dlrz_main "$INPUT"

}
function dlrz_cmd() {

    if [[ "$1" =~ ^(list)$ ]]; then
        unset INPUT
        list_files
        dlrz_read
    fi
    if [[ "$1" =~ ^(home|main)$ ]]; then
        unset INPUT
        send_to_kodi_banner
        kodi_main
    fi
    if [[ -f "$SEND_TO_KODI_DIR/lib/commands" ]]; then
        source "$SEND_TO_KODI_DIR/lib/commands"
    fi
    if [[ -z $INPUT ]]; then
        unset INPUT
        dlrz_read
    fi
}
function ytdl_dlrz() {

    dlrz_banner
    if [ $# -eq 0 ]; then
        dlrz_read
    fi
    dlrz_cmd "$@"
    dlrz_main "$@"

}
