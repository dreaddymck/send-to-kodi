#!/usr/bin/env bash

# Show a error dialog or message
# args: MESSAGE
function error() {
    printf '%s\n' "$1" >&2
    # exit 1
    main
}
# Show a question dialog or prompt
# args: MESSAGE
function question() {
    printf '%s [y/N] ' "$1" >&2
    read -r
    [[ $REPLY =~ y|Y ]]
}
# The EXIT trap
function cleanup() {
    if [[ -d $TMP_DIR ]]; then
        [[ -L $TMP_DIR/media ]] && rm "$TMP_DIR/media"
        [[ -f $TMP_DIR/media.strm ]] && rm "$TMP_DIR/media.strm"
        rmdir "$TMP_DIR"
    fi
    if [[ -d $DOWNLOAD_DIR && -f $DOWNLOAD_DIR/$TMP_FILE ]]; then
        question "Delete $TMP_FILE?" && rm "$DOWNLOAD_DIR/$TMP_FILE"
    fi
    [[ $TWISTED_PID ]] && kill "$TWISTED_PID"
    unset INPUT
    main
}
function list_files() {
    echo "******************"
    echo "Directory content:"
    echo "******************"
    if [[ -n $REMOTE_SSH ]]; then
        # ssh "$REMOTE_SSH" 'ls -A '"$REMOTE_PATH"
        ssh "$REMOTE_SSH" find "$REMOTE_PATH" -type f -not -path '*/\.*' -printf "%P\n" | sort
    else
        # ls -A "$DOWNLOAD_DIR"
        find "$DOWNLOAD_DIR" -type f -not -path '*/\.*' -printf "%P\n" | sort
    fi

}
