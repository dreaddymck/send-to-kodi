#!/usr/bin/env bash

CMDS='[
    {"command":"help|\\?", "func":"show_help"},
    {"command":"exit|quit", "func":"exit"},
    {"command":"stop|halt", "func":"kodi_stop"},
    {"command":"pause", "func":"kodi_pause"},
    {"command":"clear|clr", "func":"kodi_clear"},
    {"command":"shutdown", "func":"kodi_shutdown"},
    {"command":"reboot", "func":"kodi_reboot"},
    {"command":"next", "func":"kodi_next"},
    {"command":"previous|prev", "func":"kodi_previous"},
    {"command":"volume|vol)(.[0-9]*", "func":"kodi_volume"},
    {"command":"volamp|amp)(.[0-9]*", "func":"kodi_volamp"},
    {"command":"version", "func":"version"},
    {"command":"iptv", "func":"iptv_main"},
    {"command":"list", "func":"list_files"}
]'
command=""
func=""
if jq -e . >/dev/null 2>&1 <<<"$CMDS"; then #check for valid json

    while read -r json_string; do

        clean_json_string=$(echo "$json_string" | jq -r '.') # Remove escape characters
        command=$(echo "$clean_json_string" | jq -r '.command')

        if [[ "$INPUT" =~ ^($command)$ ]]; then
            func=$(echo "$clean_json_string" | jq -r '.func')
            break
        fi

    done <<<"$(echo "$CMDS" | jq -c '.[]')"

    if [[ -n $func ]]; then
        $func
        history -s "$INPUT"
        unset INPUT
    fi
fi
if [[ -f "$SEND_TO_KODI_CUSTOM_COMMANDS" ]]; then
    source "$SEND_TO_KODI_CUSTOM_COMMANDS"
fi